
@using System.Linq
@using CleanTechSim.MainPage.Models
@using CleanTechSim.MainPage.Models.Helper.ClientGraph
@model StatsGraphModel

@{
    string divElementId = Model.GraphId;
    string canvasElementId = Model.GraphId + "Canvas";
}
<div id="@divElementId" class="graph">

    @if (!string.IsNullOrWhiteSpace(Model.Title)) {
        <div>
            <span class="line-graph-title">@Model.Title</span>-<span class="line-graph-subtitle">@Model.SubTitle</span>
        </div>
    }
    
    <canvas id="@canvasElementId"></canvas>

    <script>
        var ctx = document.getElementById('@canvasElementId').getContext('2d');

        new Chart(ctx, {
            type : 'line',
            data : {
                'labels' : [
                    @for (int i = 0; i < Model.DataPoints.Labels.Count(); i++)
                    {
                        if (i > 0) {
                            <text>, </text>
                        }
                        
                        <text>'@Model.DataPoints.Labels.ElementAt(i)'</text>
                    }
                ],

                'datasets' : [

                @for (int i = 0; i < Model.DataPoints.DataSets.Count(); ++ i)
                {
                    DataSet dataSet = Model.DataPoints.DataSets.ElementAt(i);

                    if (i > 0) {
                        <text>, </text>
                    }
                    <text>{

                        'label' : '@dataSet.Label',
                        'borderColor' : 'rgb(@dataSet.Color.R, @dataSet.Color.G, @dataSet.Color.B)',
                        
                        'fill' : false,

                        'data' : [</text>
                    
                    for (int j = 0; j < dataSet.Values.Count(); ++ j) {
                        decimal? value = dataSet.Values.ElementAt(j);

                        string valueString = value.HasValue ? value.Value.ToString() : "null";

                        if (j > 0) {
                            <text>, </text>
                        }
                        <text>@value</text>
                    }

                    <text>]</text>

                    <text>}</text>
                }
                ]
            },

            'options' : {

                @{
                    bool anyWithoutLabel = Model.DataPoints.DataSets.Where(dataSet => string.IsNullOrWhiteSpace(dataSet.Label)).Any();
                    if (anyWithoutLabel) {

                        <text>
                            'legend' : {
                                'display' : false
                            },
                        </text>
                    }
                }

                'spanGaps' : true
            }

        });    
    </script>

</div>
